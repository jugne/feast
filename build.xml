<project name="feast" default="build" basedir=".">
  <description>
    Feast: tasty extensions to BEAST 2
  </description>

  <property name="projName" value="feast" />

  <property name="src" location="src"/>
  <property name="test" location="test"/>
  <property name="lib" location="lib"/>
  <property name="examples" location="examples"/>
  <property name="build" location="build"/>
  <property name="build-lib" location="build-lib"/>
  <property name="build-test" location="build-test"/>
  <property name="test-reports" location="test-reports"/>
  <property name="dist" location="dist"/>
  <property name="pack" location="${dist}/package"/>


  <!-- Prepare for compilation -->
  <target name="init">
    <mkdir dir="${build}"/>
    <mkdir dir="${build-lib}"/>
    <mkdir dir="${dist}"/>
    <get src="http://hudson.cs.auckland.ac.nz/job/BEAST2/lastSuccessfulBuild/artifact/build/dist/beast.jar"
	 dest="${build-lib}/beast2.jar" />
    <copy todir="${build-lib}">
      <fileset dir="${lib}" includes="*.jar"/>
    </copy>
  </target>


  <!-- Compile -->
  <target name="compile" depends="init">
    <javac srcdir="${src}" destdir="${build}" includeantruntime="false">
      <classpath>
	<pathelement path="${classpath}"/>
	<fileset dir="${build-lib}" includes="*.jar"/>
      </classpath>
    </javac>
  </target>

  
  <!-- Prepare for unit test compilation -->
  <target name="init-test" depends="init">
    <mkdir dir="${build-test}"/>
    <mkdir dir="${test-reports}"/>
    <get src="http://search.maven.org/remotecontent?filepath=junit/junit/4.11/junit-4.11.jar"
	 dest="${build-lib}/junit-4.11.jar" />
    <get src="http://search.maven.org/remotecontent?filepath=org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar"
	 dest="${build-lib}/hamcrest-core-1.3.jar" />
  </target>

  <!-- Compile unit tests -->
  <target name="compile-test" depends="init-test,compile">
    <javac srcdir="${test}" destdir="${build-test}" includeantruntime="false">
      <classpath>
	<pathelement path="${classpath}"/>
	<pathelement path="${build}" />
	<fileset dir="${build-lib}" includes="*.jar"/>
      </classpath>
    </javac>
  </target>

  <!-- Run unit tests -->
  <target name="test" depends="compile-test">
    <junit printsummary="yes" failureproperty="testFailed">
      <classpath>
	<pathelement path="${classpath}"/>
	<pathelement path="${build}" />
	<pathelement path="${build-test}" />
	<fileset dir="${build-lib}" includes="*.jar"/>
      </classpath>
      <batchtest fork="yes" todir="${test-reports}">
	<fileset dir="${test}">
	  <include name="**/*.java"/>
	</fileset>
	<formatter type="plain"/>
      </batchtest>
    </junit>

    <fail if="testFailed" status="1" message="Unit test failed."/>
  </target>

  <!-- Create BEAST 2 package -->
  <target name="build" depends="compile">
    <fail unless="version" message="Must specify version number using -Dversion=x.y.z"/>

    <property name="fullName" value="${projName}.v${version}"/>

    <mkdir dir="${pack}"/>
    <mkdir dir="${pack}/examples"/>
    <mkdir dir="${pack}/lib"/>
    <mkdir dir="${pack}/doc"/>

    <jar jarfile="${pack}/${fullName}.src.jar" basedir="${src}" />

    <copy todir="${pack}/lib">
      <fileset dir="${lib}" includes="*.jar" />
    </copy>
    <jar jarfile="${pack}/lib/${fullName}.jar" basedir="${build}" />

    <copy file="README.md" tofile="${pack}/README" />
    <copy file="COPYING" todir="${pack}" />
    <copy todir="${pack}">
      <fileset dir="${lib}" includes="LICENSE*" />
    </copy>

    <copy todir="${pack}/examples">
      <fileset dir="${examples}" includes="*.xml" />
    </copy>

    <echo file="${pack}/version.xml">&lt;addon name="${projName}" version="${version}"&gt;
    &lt;depends on="beast2" atleast="2.1.0"/&gt;
&lt;/addon&gt;
</echo>

     <zip destfile="${dist}/${fullName}.zip" basedir="${pack}" />

     <delete dir="${pack}"/>
  </target>

  <target name="clean">
    <delete dir="${build}" />
    <delete dir="${build-lib}" />
    <delete dir="${dist}" />
    <delete dir="${build-test}" />
    <delete dir="${test-reports}" />
  </target>
</project>